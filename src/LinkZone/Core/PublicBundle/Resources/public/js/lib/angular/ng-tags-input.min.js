!function(){"use strict";angular.module("tags-input",[]).directive("tagsInput",function(){function a(a,b){return angular.isDefined(a)?"true"===a:b}return{restrict:"E",scope:{tags:"=ngModel",cssClass:"@class"},replace:!1,template:'<div class="ngTagsInput {{ cssClass }}">  <ul class="tag" ng-repeat="tag in tags">    <li><span>{{ tag }}</span><button type="button" class="removeTag" ng-click="remove($index)">{{ removeTagSymbol }}</button></li>  </ul>  <input class="newTag" type="text" placeholder="{{ placeholder }}" size="{{ placeholder.length }}" maxlength="{{ maxLength }}"></div>',controller:["$scope","$attrs",function(b,c){b.placeholder=c.placeholder||"Add a tag",b.removeTagSymbol=c.removeTagSymbol||String.fromCharCode(215),b.replaceSpacesWithDashes=a(c.replaceSpacesWithDashes,!0),b.minLength=c.minLength||3,b.maxLength=Math.max(c.maxLength||b.placeholder.length,b.minLength),b.addOnEnter=a(c.addOnEnter,!0),b.addOnSpace=a(c.addOnSpace,!1),b.addOnComma=a(c.addOnComma,!0),b.allowedChars=new RegExp(c.allowedChars||"[A-Za-z0-9\\s]"),angular.isDefined(b.tags)||(b.tags=[]),b.add=function(a){b.replaceSpacesWithDashes&&(a=a.replace(/\s/g,"-")),-1===b.tags.indexOf(a)&&b.tags.push(a)},b.removeLast=function(){b.tags.pop()},b.remove=function(a){b.tags.splice(a,1)}}],link:function(a,b){var c=13,d=188,e=32,f=8;b.find("input").bind("keydown",function(b){(b.keyCode===c&&a.addOnEnter||b.keyCode===d&&a.addOnComma||b.keyCode===e&&a.addOnSpace)&&this.value.trim().length>=a.minLength?(a.add(this.value.trim()),a.$apply(),this.value="",b.preventDefault()):b.keyCode===f&&0===this.value.length&&(a.removeLast(),a.$apply())}).bind("keypress",function(b){a.allowedChars.test(String.fromCharCode(b.charCode))||b.preventDefault()}),b.find("div").bind("click",function(){b.find("input")[0].focus()})}}})}();