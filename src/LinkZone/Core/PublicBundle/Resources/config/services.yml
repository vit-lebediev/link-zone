parameters:
    link_zone_core_public.listener.registration_listener.class: LinkZone\Core\PublicBundle\EventListener\RegistrationListener

services:
    link_zone_core_public.listener.registration_listener:
        class: %link_zone_core_public.listener.registration_listener.class%
        arguments: ["@router"]
        calls:
            - [ setContainer, ["@service_container"]]
        tags:
            - { name: kernel.event_subscriber }


    link_zone_core_public.menu_builder:
        class: LinkZone\Core\PublicBundle\Menu\Builder
        arguments: ["@knp_menu.factory"]

    link_zone_core_public.menu.main:
        class: Knp\Menu\MenuItem
        factory_service: link_zone_core_public.menu_builder
        factory_method: createMainMenu
        arguments: ["@request", "@translator"]
        scope: request
        tags:
            - { name: knp_menu.menu, alias: public_main } # The alias is what is used to retrieve the menu


    link_zone.validator.unique.site_exists:
        class: LinkZone\Core\PublicBundle\Validator\Constraints\SiteExistsValidator
        arguments: ["@service_container"]
        tags:
            - { name: validator.constraint_validator ,alias: site_exists }


    link_zone.core.public.manager.request:
        class: LinkZone\Core\PublicBundle\Manager\Request
        calls:
            - [ setContainer, ["@service_container"] ]

    link_zone.core.public.manager.platform:
        class: LinkZone\Core\PublicBundle\Manager\Platform
        calls:
            - [ setContainer, ["@service_container"] ]
            - [ init ]

    link_zone.core.public.manager.dialog:
        class: LinkZone\Core\PublicBundle\Manager\Dialog
        calls:
            - [ setContainer, ["@service_container"] ]
            - [ init ]

    link_zone.core.twig.extension:
        class: LinkZone\Core\PublicBundle\Twig\Extension\CoreExtension
        public: false
        calls:
            - [ setContainer, ["@service_container"] ]
        tags:
            - { name: twig.extension }
